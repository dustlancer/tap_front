const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./B9X9-zG0.js","./Bt75jGZa.js"])))=>i.map(i=>d[i]);
import{a2 as l,a3 as p,k as r}from"./Bt75jGZa.js";const n={id:454338166,first_name:"Андрей",last_name:"",username:"paenny",language_code:"ru",allows_write_to_pm:!0},d=l("user",{state:()=>({avatar_url:"",user_id:0,level:{level_number:0,level_name:"",speed_increase_percent:0,storage_time_increase_hours:0,character_image_url:"",background_image_url:"",isLoading:!0},mining_speed:0,storage_capacity:0,coins:0,local_coins:0,inviter_id:null,abraka:null,raw_data:void 0,tasks:[]}),actions:{async fetchUserData(){let e,t;try{e=(await p(()=>import("./B9X9-zG0.js"),__vite__mapDeps([0,1]),import.meta.url)).useWebApp,console.error("Ошибка при импорте useWebApp NOT HAPPENED");const{initDataUnsafe:s}=e(),i=s==null?void 0:s.user;if(this.raw_data=s,i){t=i,s!=null&&s.start_param&&(t.inviter_id=s==null?void 0:s.start_param),this.inviter_id=s.startapp,console.info("Connected with tg");let o=window.Telegram.WebApp.initDataUnsafe.startapp;this.abraka=o}else console.error("Failed to connect with tg, boot locally"),t=n}catch(a){console.error("Ошибка при импорте useWebApp:",a),t=n}this.isLoading=!0;try{const s=r().public.apiBase,i=await fetch(`${s}/telegram/init/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(i.ok){const o=await i.json();this.setUserData(o),console.log("User data set successfully:",o)}else console.error("Failed to send user data:",i.status)}catch(a){console.error("Error:",a),this.isMaintenance=!0}finally{this.isLoading=!1}},async fetchTasks(){try{const t=r().public.apiBase,a=await fetch(`${t}/api/tasks/?user_id=${this.user_id}`);if(a.ok){const s=await a.json();this.tasks=s}else console.error("Failed to fetch tasks:",a.status)}catch(e){console.error("Error fetching tasks:",e)}},async claimTaskReward(e){try{const a=r().public.apiBase,s=await fetch(`${a}/api/claim-task/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:this.user_id,task_id:e})});if(s.ok){const i=await s.json(),o=this.tasks.find(c=>c.id===e);return o&&(o.is_claimed=!0),i.new_balance!==void 0&&(this.coins=i.new_balance),i}else console.error("Failed to claim task reward:",s.status)}catch(t){console.error("Error claiming task reward:",t)}},updateCoins(e){this.coins=e},updateLocalCoins(){this.local_coins=this.local_coins+this.coins_per_tap},setUserData(e){this.avatar_url=e.avatar_url,this.user_id=e.user_id,this.level=e.level,this.mining_speed=e.mining_speed,this.storage_capacity=e.storage_capacity,this.coins=e.coins,this.coins_per_tap=e.coins_per_tap,this.local_coins=e.coins},async claimCoins(e){try{const a=r().public.apiBase,s=await fetch(`${a}/api/claim-coins/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:this.user_id,claimed_coins:e})});if(!s.ok)throw new Error("Ошибка при попытке забрать монеты");const i=await s.json();this.local_coins+=e,this.coins+=e}catch(t){console.error("Ошибка при клейме монет:",t)}}}});export{d as u};
